apply plugin: 'com.android.application'
apply plugin: 'newlens'
apply plugin: 'android-aspectjx'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        applicationId "com.zxwl.xinji"
        versionCode 5
        versionName "1.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
            multiDexEnabled true
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    dexOptions {
        incremental true

        //TODO:加速编译-start-优化dex配置
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "2g"
        //TODO:加速编译-end-优化dex配置
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if ("release".equals(variant.buildType.name)) {
                        def fileName = "xinji_${variant.versionName}_${releaseTime()}.apk"
                        def outFile = output.outputFile
                        if (outFile != null && outFile.name.endsWith('.apk')) {
                            outputFileName = fileName  //  output.outputFile 改为 outputFileName
                        }
                    }
                }
            }
        }
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:25.1.0'
    }

    lintOptions {
        abortOnError false
    }


    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        //解决编译时com.android.builder.merge.DuplicateRelativeFileException: More than one file was found with OS independent path 'META-INF/rxjava.properties'这个错误

        exclude 'META-INF/rxjava.properties'
    }

    //TODO:加速编译-start
    //如果是构建debug包, 则禁用 "png cruncher" (默认cruncherEnabled=true, 禁用以加速构建)
//    def enableCruncher = { ->
//        return !isDebug()
//    }
//
//    aaptOptions { //禁用cruncher, 以加速编译
//        cruncherEnabled = enableCruncher()
//        cruncherProcesses = 0
//    }
//
//    //跳过Lint和Test相关的task, 以加速编译
//    if (isDebug()) {
//        gradle.taskGraph.whenReady {
//            tasks.each { task ->
//                if (task.name.contains("Test") || task.name.contains("Lint")) {
//                    task.enabled = false
//                }
//            }
//        }
//    }
    //TODO:加速编译-end
}

def releaseTime() {
    return new Date().format("yyyyMMdd_HHmm", TimeZone.getTimeZone("Asia/Shanghai"))
}

//强制使用某一个版本
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.0.0'
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'

    //implementation：只在内部使用了该 module，不会向外部暴露其依赖的 module 内容。
    implementation project(':commonlibrary')

    //路由
    annotationProcessor rootProject.ext.dependencies.arouter_compiler

    //权限
    implementation 'com.lovedise:permissiongen:0.0.6'

    //图片压缩
    implementation 'top.zibin:Luban:1.1.8'

    //tablayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    //适配器
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.46'

    // 视屏播放器
    implementation 'com.shuyu:GSYVideoPlayer:6.0.3'

    //三级联动选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.8'

    //验证码输入框
    implementation 'com.github.maning0303:MNPasswordEditText:V1.0.2'

    //圆角进度条
    implementation 'com.akexorcist:RoundCornerProgressBar:2.0.3'

    ////横向recycler
    //implementation 'com.yarolegovich:discrete-scrollview:1.4.9'

    //下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-28'

    //查看图片
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'

    //版本更新

//    implementation 'com.allenliu.versionchecklib:library:2.2.0'
//    implementation('com.allenliu.versionchecklib:library:2.2.0') {
//        exclude module: 'support-v4'
//        exclude module: 'support-annotations'
//    }
    implementation('com.github.AlexLiuSheng:CheckVersionLib:2.3.3.1_appcompat') {
        exclude module: 'support-v4'
        exclude module: 'support-annotations'
    }

    //状态栏字体颜色更换 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta05'

    //骨架图
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    //内存泄漏检测d
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.6'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.6'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.6'

    implementation 'com.just.agentweb:agentweb:4.1.2'
    implementation 'com.download.library:Downloader:4.1.2'

    //圆角图片
    //implementation 'com.github.siyamed:android-shape-imageview:0.9.+@aar'

    //听云
    implementation 'com.networkbench.newlens.agent.android:nbs.newlens.agent:2.13.3'
    implementation 'com.networkbench.newlens.agent.android:nbs.newlens.nativecrash:1.0.0'

    //图片选择
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'

    //头部悬浮框
    implementation 'com.github.qdxxxx:StickyHeaderDecoration:1.0.1'
    implementation files('libs/pinyin4j-2.5.0.jar')

    //听云
    implementation files('libs/tiandituapi3.0.jar')

    //下载
    implementation 'com.liulishuo.filedownloader:library:1.7.6'

    //获取经纬度

    //    implementation 'io.nlopez.smartlocation:library:3.3.3'
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.1148_43697_sharewithdownloadwithfile_withoutGame_obfs_20190805_175505.jar')

    //拉起微信小程序
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.3.1'

    //popupwindow--https://github.com/razerdp/BasePopup
    implementation 'com.github.razerdp:BasePopup:2.2.1'

    //跑马灯效果--https://github.com/sunfusheng/MarqueeView
    implementation project(path: ':marqueeview')
    implementation project(path: ':vclibxinji')

    //使用icbcsdk项目的sdk
    //    implementation(name: 'vcLib19.1.1-release', ext: 'aar')


    implementation 'org.xutils:xutils:3.5.0'
    //高德地图
    implementation files('libs/AMap3DMap_7.1.0_AMapNavi_7.1.0_AMapSearch_7.1.0_AMapLocation_4.7.2_20191030.jar')


    //本地bug捕捉-https://github.com/Sunzxyong/Recovery
    implementation 'com.zxy.android:recovery:1.0.0'

}
